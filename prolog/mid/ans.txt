1.
程式碼
conc([], L, L).
conc([X|L1], L2, [X|L3]) :- conc(L1, L2, L3). 
pconstruction(List, Plist) :- reverse(List, RL), conc(List, RL, Plist).

測資
| ?- pconstruction([a,b,c,d], PList).

PList = [a,b,c,d,d,c,b,a]

yes
| ?- pconstruction([1,2,2,1], PList).

PList = [1,2,2,1,1,2,2,1]

yes
| ?- pconstruction([[a],[b,c,d]], PList).

PList = [[a],[b,c,d],[b,c,d],[a]]

yes
| ?- pconstruction(List, [1,3,5,5,3,1]).

List = [1,3,5] ? 

yes
| ?- pconstruction([], PList).

PList = []

yes
| ?- pconstruction([1,2,1,2], PList).

PList = [1,2,1,2,2,1,2,1]

yes


2.
程式碼
addp([], [], _).
addp([X| List1], [Y| List2], N) :- Y is X+N, N1 is N+1, addp(List1, List2, N1).
addposition(List1, List2) :- addp(List1, List2, 1).

測資
| ?- addposition([0,0,0,0,0,0,0], List2).

List2 = [1,2,3,4,5,6,7]

yes
| ?- addposition([5,5,5,5,5], List2).

List2 = [6,7,8,9,10]

yes
| ?- addposition([-5,4,-3,2,-1], List2).

List2 = [-4,6,0,6,4]

yes
| ?- addposition([7,6,5,4,3,2,1], List2).

List2 = [8,8,8,8,8,8,8]

yes
| ?- addposition([1,3,5,3,1], List2).

List2 = [2,5,8,7,6]

yes
| ?- addposition([0,1,0,1,0,1], List2).

List2 = [1,3,3,5,5,7]

yes


3.
程式碼
add_end(X, [], [X]).
add_end(X, [A| L], [A| L1]) :- add_end(X, L, L1).
shiftNumber(L, 0, L).
shiftNumber([X|L1], N, L) :- P is N-1, add_end(X, L1, L2), shiftNumber(L2, P, L).   
ms(L, N, N, L).
ms(L, Num, N, _) :- N1 is N+1, shiftNumber(L, N1, L2), ms(L, Num, N1, L2). 
minshiftN(List, N) :- shiftNumber(List, 1, L1), ms(List, N, 1, L1).

測資
| ?- minshiftN([a,a,a,a,a], N).

N = 1 ? 

yes
| ?- minshiftN([a,b,c,4,5,a,b,c,4,5,a,b,c,4,5], N).

N = 5 ? 

yes
| ?- minshiftN([a,b,c], N).

N = 3 ? 

yes
| ?- minshiftN([a,b,c,b,a], N).

N = 5 ? 

yes
| ?- minshiftN([1,0,1,0,1,0,1,0], N).

N = 2 ? 

yes
| ?- minshiftN([1,0,1,0,1,0,1], N).

N = 7 ? 

yes
